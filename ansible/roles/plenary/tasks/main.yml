---
- block:
  # Configure freeswitch
  - name: Create conf directories
    file: state=directory path=/etc/freeswitch/{{item}}
    with_items:
      - autoload_configs
      - dialplan
      - directory
      - sip_profiles

  - name: Copy conf files
    template: src={{item}} dest=/etc/{{item}}
    with_items:
      - freeswitch/freeswitch.xml
      - freeswitch/vars.xml
      - freeswitch/autoload_configs/acl.conf.xml
      - freeswitch/autoload_configs/conference.conf.xml
      - freeswitch/autoload_configs/modules.conf.xml
      - freeswitch/autoload_configs/verto.conf.xml
      - freeswitch/autoload_configs/rtmp.conf.xml
      - freeswitch/dialplan/default.xml
      - freeswitch/dialplan/plenary.xml
      - freeswitch/directory/default.xml
      - freeswitch/sip_profiles/internal.xml
    notify: restart freeswitch

  # FreeSWITCH tcp ports
  - name: Open firewall tcp ports
    ufw: rule=allow proto=tcp port=5060,5061,5066,7443,8081,8082

  # FreeSWITCH RTP ports
  - name: Open firewall udp ports
    ufw: rule=allow proto=udp port=16384:32768

  tags: ['plenary', 'plenary-freeswitch']

- block:
  # Webapp prereqs
  - name: Dependencies
    apt: pkg={{item}} state=installed
    with_items:
     - make

  - name: Create services dir
    file: path=/usr/lib/systemd/system state=directory

  tags: ['plenary', 'plenary-pre']

- block:
  # Webapp
  - name: Download code
    git: >
      repo={{plenary_repo_url}}
      dest={{plenary_repo_dir}}
      version={{plenary_repo_version}}
      accept_hostkey=True
    notify:
      - rebuild plenary deps
      - restart plenary

  - name: Install node dependencies
    npm: path={{plenary_project_dir}}

  - name: Install systemd service
    template: src=plenary.service dest=/usr/lib/systemd/system/plenary.service
    notify:
     - plenary systemctl daemon-reload
     - restart plenary

  - name: Enable systemd service
    command: systemctl enable plenary.service
    register: systemd_enable
    changed_when: systemd_enable.stdout.find("Created") != -1

  # Nginx config
  - name: Copy nginx config
    template: src=plenary_nginx.conf dest=/etc/nginx/sites-available/plenary.conf
    notify: restart nginx
    tags: plenary-nginx

  - name: Copy nginx rtmp config
    template: src=plenary_rtmp_nginx.conf dest=/etc/nginx/rtmp.d/plenary.conf
    notify: restart nginx
    tags: plenary-nginx

  - name: Enable plenary nginx
    file: >
      src=/etc/nginx/sites-available/plenary.conf
      dest=/etc/nginx/sites-enabled/plenary.conf
      state=link
    notify: restart nginx
    tags: plenary-nginx

  - name: Babel cache tmp directory
    file: >
      path={{plenary_tmp_dir}}
      state=directory
      owner=www-data
      group=www-data

  tags: ['plenary', 'plenary-webapp']
